def sendSlackNotifications(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
pipeline{
  agent any  
tools {
  maven 'maven 3.8.4'
}
    stages{
    stage('CheckOutCode'){
    steps{
        sendSlackNotifications('STARTED')
        git branch: 'development', credentialsId: 'bf6fb5c2-9f48-4fef-94dc-9572ed7853b0', url: 'https://github.com/kollipavan/maven-web-application.git'
    }
    }
    stage('Build'){
        steps{
            sh "mvn clean package"
        }
    }
stage('ExecuteSonarQubeReport'){
    steps{
sh "mvn sonar:sonar"
}
}
stage('UploadArtifactsintoNexus'){
    steps{
sh "mvn deploy"
}
}
stage('DeployApplicationIntoTomcatServer'){
    steps{
sshagent(['4243fdc1-b2d8-44f0-b356-7c30d9f1400a']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.109.207.14:/opt/apache-tomcat-9.0.62/webapps/"
}
}
}
}
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}

}
